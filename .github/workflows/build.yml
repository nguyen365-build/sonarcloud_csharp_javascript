name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Setup NuGet
        uses: nuget/setup-nuget@v1
        with:
          nuget-version: 'latest'

      - name: Restore NuGet packages
        run: nuget restore SonarCloud.CSharp.JavaScript.sln

      - name: Build solution
        run: msbuild SonarCloud.CSharp.JavaScript.sln /p:Configuration=Release

      # Install Coverlet Collector for Code Coverage
      #- name: Install Coverlet Collector
      #  run: dotnet add WebApplication.Tests/WebApplication.Tests.csproj package coverlet.collector

      # Run MSTests with Coverlet to Generate OpenCover Coverage
      - name: Run MSTests & Generate Coverage
        run: |
          & "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\CommonExtensions\Microsoft\TestWindow\vstest.console.exe" WebApplication.Tests\bin\Release\WebApplication.Tests.dll /TestAdapterPath:. /logger:trx /ResultsDirectory:TestResults /Collect:"XPlat Code Coverage"

      # Move Coverage Report to Correct Path for SonarCloud
      - name: Move Coverage Report
        run: |
          mv TestResults/*/coverage.cobertura.xml TestResults/coverage.opencover.xml

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install JavaScript dependencies
        run: npm install
        working-directory: WebApplication/Scripts

      # Run Jest Tests & Generate Coverage Report
      - name: Run Jest tests
        run: npm test -- --coverage
        working-directory: WebApplication/Scripts

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: TestResults
          path: TestResults

      # Run SonarCloud Scan with Both C# and JavaScript Coverage
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Upload Both C# & JavaScript Coverage Reports to SonarCloud
      - name: Upload Coverage Report to SonarCloud
        run: |
          sonar-scanner \
            -Dsonar.cs.opencover.reportsPaths=TestResults/coverage.opencover.xml \
            -Dsonar.javascript.lcov.reportPaths=WebApplication/Scripts/coverage/lcov.info
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
